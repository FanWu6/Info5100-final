<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neu.infofinal.mapper.EmployeeMapper">
  <resultMap id="BaseResultMap" type="com.neu.infofinal.bean.Employee">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="organization_id" jdbcType="INTEGER" property="organizationId" />
    <result column="enterprise_id" jdbcType="INTEGER" property="enterpriseId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="useraccount_id" jdbcType="INTEGER" property="useraccountId" />
  </resultMap>
  
  <resultMap id="queryuseraccountMap" type="com.neu.infofinal.bean.Employee">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="organization_id" jdbcType="INTEGER" property="organizationId" />
    <result column="enterprise_id" jdbcType="INTEGER" property="enterpriseId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="useraccount_id" jdbcType="INTEGER" property="useraccountId" />
    <collection property="useraccounts" javaType="java.util.List" ofType="com.neu.infofinal.bean.UserAccount">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="username" jdbcType="VARCHAR" property="username" />
        <result column="password" jdbcType="VARCHAR" property="password" />
    </collection>    
  </resultMap>
  
  <select id="queryuseraccount" resultMap="queryuseraccountMap">
      select 
	iet.id ,
	iet.organization_id ,
	iet.enterprise_id ,
	iet.name ,
	iet.useraccount_id ,
	iut.id ,
	iut.password ,
	iut.username 
        from info_employee_t iet 
        left join info_useraccount_t iut 
        on iet.useraccount_id = iut.id 
  </select>
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, organization_id, enterprise_id, name, useraccount_id
  </sql>
  <select id="selectByExample" parameterType="com.neu.infofinal.bean.EmployeeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from info_employee_t
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from info_employee_t
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from info_employee_t
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neu.infofinal.bean.EmployeeExample">
    delete from info_employee_t
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neu.infofinal.bean.Employee">
    insert into info_employee_t (id, organization_id, enterprise_id, 
      name, useraccount_id)
    values (#{id,jdbcType=INTEGER}, #{organizationId,jdbcType=INTEGER}, #{enterpriseId,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{useraccountId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.neu.infofinal.bean.Employee">
    insert into info_employee_t
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="organizationId != null">
        organization_id,
      </if>
      <if test="enterpriseId != null">
        enterprise_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="useraccountId != null">
        useraccount_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="organizationId != null">
        #{organizationId,jdbcType=INTEGER},
      </if>
      <if test="enterpriseId != null">
        #{enterpriseId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="useraccountId != null">
        #{useraccountId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neu.infofinal.bean.EmployeeExample" resultType="java.lang.Long">
    select count(*) from info_employee_t
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update info_employee_t
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.organizationId != null">
        organization_id = #{record.organizationId,jdbcType=INTEGER},
      </if>
      <if test="record.enterpriseId != null">
        enterprise_id = #{record.enterpriseId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.useraccountId != null">
        useraccount_id = #{record.useraccountId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update info_employee_t
    set id = #{record.id,jdbcType=INTEGER},
      organization_id = #{record.organizationId,jdbcType=INTEGER},
      enterprise_id = #{record.enterpriseId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      useraccount_id = #{record.useraccountId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neu.infofinal.bean.Employee">
    update info_employee_t
    <set>
      <if test="organizationId != null">
        organization_id = #{organizationId,jdbcType=INTEGER},
      </if>
      <if test="enterpriseId != null">
        enterprise_id = #{enterpriseId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="useraccountId != null">
        useraccount_id = #{useraccountId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neu.infofinal.bean.Employee">
    update info_employee_t
    set organization_id = #{organizationId,jdbcType=INTEGER},
      enterprise_id = #{enterpriseId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      useraccount_id = #{useraccountId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectCondition" parameterType="map" resultMap="BaseResultMap">
    select ${fields} from info_employee_t
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </select>
</mapper>